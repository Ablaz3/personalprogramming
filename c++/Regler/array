arrays are sequences of values of a specific type
elements in an array are numbered from 0.
initialize syntax:
type name [number_of_elements];
an array declared statically, or within a namespace will by default be initialized (for fundamental types, have their value set to 0)
to initialize at the same time of declaration
syntax: type name [number_of_elements] {element 1, element 2, element 3...}
if the array is specified to have more values than declared, the remaining values are set to default. (for fundamental types, 0)

acces a specific element of an array syntax: array_name[element_number]
can be used to:
set a specific element to a specific value: array_name[3]=12 //sets the fourth element in the array to 12
use a specific element in the code: cout << array_name[0] //prints the first element in the array

multidimensional array: an array of arrays of the smaller dimension
a two dimensional array is an array of one dimensional arrays.
syntax declaration:
int array_name[number_of_second_dimension_elements][number_of_first_dimension_elements_per_second_dimension_element]
to access an element in a multidimensional array
syntax: array_name[first_dimension][second_dimension]

library arrays:
syntax: array<type, length> name {element1, element2, element3..};